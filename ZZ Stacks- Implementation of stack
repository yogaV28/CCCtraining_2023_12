#include <stdio.h>

#define MAX_SIZE 100

struct Stack {
    int size;
    int data[MAX_SIZE];
    int top;
};

void initStack(struct Stack *stack, int size) {
    stack->size = size;
    stack->top = -1;
}

void push(struct Stack *stack, int element) {
    if (stack->top < stack->size - 1) {
        stack->data[++stack->top] = element;
    } else {
        printf("Stack is full. Cannot push element.\n");
    }
}

int pop(struct Stack *stack) {
    if (stack->top >= 0) {
        return stack->data[stack->top--];
    } else {
        printf("Stack is empty. Cannot pop element.\n");
        return -1;  // Assuming -1 is not a valid element in the stack
    }
}

void printStack(struct Stack *stack) {
    for (int i = stack->top; i >= 0; i--) {
        printf("%d ", stack->data[i]);
    }
    printf("\n");
}

int main() {
    struct Stack stack;
    int N, K, P;

    // Input
    scanf("%d", &N);
    initStack(&stack, N);

    scanf("%d", &K);
    for (int i = 0; i < K; i++) {
        int element;
        scanf("%d", &element);
        push(&stack, element);
    }

    scanf("%d", &P);
    for (int i = 0; i < P; i++) {
        pop(&stack);
    }

    // Output
    printStack(&stack);

    return 0;
}
